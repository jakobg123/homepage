@import '../../styles/variables.scss';
@import '../../styles/extensions.scss';

.DropDown {
  padding-top: $spacingS;
  height: 4.5rem;

  &__Button {
    display: flex;
    align-items: center;
    background-color: $colorPrimary;
    border: 1px solid $colorBlack;
    border-radius: $radiusButtonSmall;
    outline: none;
    width: 100%;
    justify-content: space-between;
    padding: $spacingXs;
    padding-right: $spacingS;
    padding-left: $spacingM;
    height: 100%;
    position: relative;
  }
  &--Dark .DropDown__Button {
    background-color: $colorBlack;
    border: 1px solid $colorPrimary;
  }

  &__ButtonText {
    @extend %fontColorBlack;
    @extend %labelSmall;
    margin-right: $spacingS;

    .Dropdown--Dark & {
      @extend %fontColor;
    }
  }

  &--Dark .DropDown__ButtonText {
    @extend %fontColor;
  }

  &__IconWrapper {
    width: $spacingL;
  }
  &__Text {
    background-color: $colorWhite;
    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.5);
    will-change: transform;
    overflow: hidden;
    transform: scaleY(0);
    transform-origin: top;
    transition: $transitionQuick;
    padding: $spacingS $spacingXl $spacingL $spacingM;
    margin: 0;
    position: absolute;
    top: calc(100% - 4px);
    right: 0;
    width: 100%;
    z-index: 1000;
    border-bottom-left-radius: $radiusButtonSmall;
    border-bottom-right-radius: $radiusButtonSmall;

    &--Expanded {
      transform: scaleY(1);
      z-index: 5000;
    }

    .DropDown--Dark & {
      background-color: $colorBlack;
      box-shadow: 0px 4px 4px rgba(255, 255, 255, 0.5);
    }
  }
  &__Content {
    will-change: transform;
    transition: $transitionQuick;
    transform: translate(0, -100%);
    @extend %richtext;
    max-width: 100%;

    p {
      color: $colorBlack;
      padding-bottom: $spacingM;

      .DropDown--Dark & {
        color: $colorPrimary;
      }
    }

    &--Expanded {
      transform: translate(0, 0rem);
    }
  }

  &__IconWrapper {
    will-change: transform;
    transform: rotate(0);
    transition: $transitionQuick;

    &--Expanded {
      transform: rotate(-180deg);
    }
  }
}
